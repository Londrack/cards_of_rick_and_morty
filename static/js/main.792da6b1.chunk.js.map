{"version":3,"sources":["components/Header.jsx","hooks/useCharacters.js","components/Search.jsx","components/Characters.jsx","App.js","context/ThemeContext.js","index.js"],"names":["Header","useState","darkMode","setDarkMode","className","onClick","document","body","classList","toggle","src","useCharacters","url","characters","setCharacters","useEffect","fetch","then","response","json","data","results","Search","search","searchInput","handleSearch","type","placeholder","ref","value","onChange","initialState","favorites","favoriteReducer","state","action","find","item","id","payload","filter","Characters","useReducer","dispatch","setSearch","useRef","useCallback","current","filteredCharacters","useMemo","char","name","toLowerCase","includes","claseNameCharacter","clas","length","imgStatus","status","alt","title","imgGender","gender","toggleClass","cls","querySelector","map","favorite","image","character","species","origin","location","App","ThemeContext","React","createContext","ReactDOM","render","StrictMode","Provider","getElementById"],"mappings":"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","file":"static/js/main.792da6b1.chunk.js","sourcesContent":["import React, { useState /*, useContext*/ } from 'react';\r\n//import ThemeContext from '../context/ThemeContext';\r\n\r\nimport '../css/Header.css'\r\n\r\nexport default function Header() {\r\n    const [darkMode, setDarkMode] = useState(false);\r\n    //const color = useContext(ThemeContext);\r\n\r\n    const handleClick = () => {\r\n        setDarkMode(!darkMode);\r\n        document.body.classList.toggle('dark');\r\n    }\r\n    return (\r\n        <div className=\"Header\">\r\n            <h1>Cards of Rick & Morty</h1>\r\n            <div onClick={handleClick} className={!darkMode ? 'controlMode dark' : 'controlMode light'}>\r\n                {!darkMode ?\r\n                    <img src=\"https://img.icons8.com/ios/50/000000/light-on--v1.png\"/> :\r\n                    <img src=\"https://img.icons8.com/ios/50/000000/light-off.png\"/>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\";\r\n\r\nconst useCharacters = url => {\r\n    const [characters, setCharacters] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        fetch(url)\r\n        .then(response => response.json())\r\n        .then(data => setCharacters(data.results))\r\n    }, [url])\r\n    return characters;\r\n}\r\n\r\nexport default useCharacters;","import React from 'react'\r\n\r\nconst Search = ({search, searchInput, handleSearch}) => {\r\n    return (\r\n        <div className=\"Search\">\r\n            <input type=\"text\" placeholder=\"Loaded character filter\" ref={searchInput} value={search} onChange={handleSearch} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search\r\n","import React, {useState, useReducer, useMemo, useRef, useCallback} from 'react';\r\nimport '../css/Characters.css';\r\nimport useCharacters from '../hooks/useCharacters';\r\nimport Search from './Search';\r\n\r\n\r\nconst initialState = {\r\n    favorites: []\r\n}\r\n\r\nconst API = 'https://rickandmortyapi.com/api/character';\r\n\r\nconst favoriteReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'ADD_TO_FAVORITE':\r\n            const isExist = state.favorites.find(item => item.id === action.payload.id)\r\n            if (isExist){\r\n                return {\r\n                    ...state,\r\n                    favorites: state.favorites.filter(item => item !== action.payload)\r\n                }\r\n            }else{\r\n                return {\r\n                    ...state,\r\n                    favorites: [...state.favorites, action.payload]\r\n                }\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default function Characters() {\r\n\r\n    const [favorites, dispatch] = useReducer(favoriteReducer, initialState);\r\n    const [search, setSearch] = useState('');\r\n    const searchInput = useRef(null);\r\n    const [nextPage, setNextPage] = useState('');\r\n\r\n    const characters = useCharacters(API);\r\n\r\n    const loadMore = () =>{\r\n        /*fetch(nextPage)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            const moreCharacters = Object.assign(characters, data.results);\r\n            console.log(moreCharacters)\r\n            setCharacters(moreCharacters);\r\n            setNextPage(data.info.next);\r\n        });*/\r\n    }\r\n\r\n    const handleSearch = useCallback(() => {\r\n        setSearch(searchInput.current.value);\r\n    }, [])\r\n\r\n    const filteredCharacters = useMemo(()=>\r\n        characters.filter((char)=>{\r\n            return char.name.toLowerCase().includes(search.toLowerCase());\r\n        }),\r\n        [characters, search]\r\n    )\r\n\r\n    const addFavorite = favorite => {\r\n        document.querySelector(`#card${favorite.id} .favoriteButton`).classList.toggle(\"off\");\r\n        dispatch({type: 'ADD_TO_FAVORITE', payload: favorite})\r\n    }\r\n\r\n    const claseNameCharacter = (name) => {\r\n        let clas = \"characterName\";\r\n        clas += (name.length > 16) ? \" mini1\" : \"\";\r\n        return clas;\r\n    }\r\n\r\n    const imgStatus = (status) => {\r\n        switch(status){\r\n            case 'Dead':\r\n                return <img alt=\"Dead\" title=\"Dead\" src=\"https://img.icons8.com/material-rounded/50/000000/skull.png\"/>;\r\n            case 'Alive':\r\n                return <img alt=\"Alive\" title=\"Alive\" src=\"https://img.icons8.com/ios-filled/48/000000/heart-with-pulse--v1.png\"/>;\r\n            case 'unknown':\r\n                return <img alt=\"unknown\" title=\"unknown\" src=\"https://img.icons8.com/material/50/000000/help--v2.png\"/>\r\n        }\r\n    }\r\n\r\n    const imgGender = (gender) => {\r\n        switch(gender){\r\n            case 'Female':\r\n                return <img alt=\"Female\" title=\"Female\" src=\"https://img.icons8.com/material-outlined/50/000000/female.png\"/>\r\n            case 'Male':\r\n                return <img alt=\"Male\" title=\"Male\" src=\"https://img.icons8.com/ios-filled/50/000000/male.png\"/>\r\n            case 'Genderless':\r\n                return <img alt=\"Genderless\" title=\"Genderless\" src=\"https://img.icons8.com/ios-filled/50/000000/agender-symbol.png\"/>\r\n            case 'unknown':\r\n                return <img alt=\"unknown\" title=\"unknown\" src=\"https://img.icons8.com/material/50/000000/help--v2.png\"/>\r\n        }\r\n    }\r\n\r\n    const toggleClass = (id, cls) => {\r\n        document.querySelector(`#card${id}`).classList.toggle(cls);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Search search={search} searchInput={searchInput} handleSearch={handleSearch} />\r\n\r\n            <div className=\"favoritesBox\">\r\n                {(favorites.favorites.length !== 0) && <h3>Favorites: </h3>}\r\n                {favorites.favorites.map(favorite => (\r\n                    <div className=\"favCharacter\" key={favorite.id}><img alt={favorite.name} src={favorite.image} /></div>\r\n                ))}\r\n            </div>\r\n\r\n            <div className=\"charactersGeneralBox\">\r\n                <div id=\"allCardsBox\">\r\n                    {filteredCharacters.map(character => (\r\n                        <div className=\"cardBox\" key={character.id} id={\"card\"+character.id}>\r\n                            <div className=\"card\">\r\n                                <div className=\"face front\">\r\n                                    <div className=\"contenido\">\r\n                                        <span className={favorites.favorites.find(item => item.id === character.id) ? \"favoriteButton\" : \"favoriteButton off\"} type=\"button\" onClick={() => addFavorite(character)}> </span>\r\n                                        <span className=\"flipButton\" onClick={() => toggleClass(character.id, \"flip\")}>\r\n                                            <img alt=\"flip\" src=\"https://img.icons8.com/ios-filled/50/000000/reply-arrow.png\"/>\r\n                                        </span>\r\n                                        <span className={\"label gender \"+character.gender}>\r\n                                            { imgGender(character.gender) }\r\n                                        </span>\r\n                                        <span className={\"label status \"+character.status}>\r\n                                            { imgStatus(character.status) }\r\n                                        </span>\r\n                                        <div className=\"imgBox\">\r\n                                            <img alt={character.name} src={character.image} />\r\n                                        </div>\r\n                                        <div className={claseNameCharacter(character.name)}>\r\n                                            <h2>{character.name}</h2>\r\n                                            <h3>{character.species}</h3>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"face back\">\r\n                                    <div className=\"contenido\">\r\n                                        <span className=\"flipButton\" onClick={() => toggleClass(character.id, \"flip\")}>\r\n                                            <img alt=\"flip\" src=\"https://img.icons8.com/ios-filled/50/000000/reply-arrow.png\"/>\r\n                                        </span>\r\n                                        <h2>{character.name}</h2>\r\n                                        {(character.type) && <p><strong>* Type:</strong> {character.type}</p>}\r\n                                        {(character.origin) && <p><strong>* Origin:</strong> {character.origin.name}</p>}\r\n                                        {(character.location) && <p><strong>* Location:</strong> {character.location.name}</p>}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n\r\n            {/*<button className=\"loadMore\" onClick={loadMore()}>Load More</button>*/}\r\n\r\n        </div>\r\n    )\r\n}\r\n","import './css/App.css';\nimport Header from './components/Header';\nimport Characters from './components/Characters';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Characters />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\r\n\r\nconst ThemeContext = React.createContext (null);\r\n\r\nexport default ThemeContext;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport ThemContext from './context/ThemeContext';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemContext.Provider value=\"black\">\n      <App />\n    </ThemContext.Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}