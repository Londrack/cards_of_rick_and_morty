{"version":3,"sources":["components/Search.jsx","components/Header.jsx","components/Characters.jsx","reducers/favoriteReducer.js","hooks/useCharacters.js","components/Layout.jsx","App.js","index.js"],"names":["Search","search","searchInput","handleSearch","className","type","placeholder","ref","value","onChange","Header","useState","darkMode","setDarkMode","showFixed","setShowFixed","useEffect","document","addEventListener","e","newShowFixed","window","scrollY","onClick","body","classList","toggle","src","Characters","claseNameCharacter","favorites","loading","filteredCharacters","addFavorite","toggleClass","imgStatus","imgGender","loadingStatus","map","favorite","href","id","alt","name","image","character","readonly","title","class","find","item","species","gender","status","origin","location","favoriteReducer","state","action","payload","filter","useCharacters","url","characters","setCharacters","setLoading","setLoadingStatus","fetchData","fetch","then","response","json","data","results","info","next","setTimeout","nextPage","split","parseInt","allPages","pages","loadValue","Math","round","initialState","Layout","useReducer","dispatch","setSearch","useRef","consult","useCallback","current","useMemo","char","toLowerCase","includes","clas","length","querySelector","cls","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.91e648c5.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Search = ({search, searchInput, handleSearch}) => {\r\n    return (\r\n        <div className=\"Search\">\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Search character\"\r\n                ref={searchInput}\r\n                value={search}\r\n                onChange={handleSearch} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search\r\n","import React, { useState, useEffect } from 'react';\r\nimport Search from './Search'\r\n\r\nimport '../css/Header.css'\r\n\r\nexport default function Header({\r\n        search,\r\n        searchInput,\r\n        handleSearch\r\n    }) {\r\n    const [darkMode, setDarkMode] = useState(false)\r\n    const [showFixed, setShowFixed] = useState(false)\r\n\r\n    const handleClick = () => {\r\n        setDarkMode(!darkMode);\r\n        document.body.classList.toggle('dark');\r\n    }\r\n\r\n    useEffect(function () {\r\n        const onScroll = e => {\r\n          const newShowFixed = window.scrollY > 200\r\n          showFixed !== newShowFixed && setShowFixed(newShowFixed)\r\n        }\r\n        document.addEventListener('scroll', onScroll)\r\n    })\r\n    return (\r\n        <>\r\n           <div className={ showFixed ? \"Header fixed\" : \"Header\"}>\r\n                <h1>Cards of Rick & Morty</h1>\r\n                <Search\r\n                    search={search}\r\n                    searchInput={searchInput}\r\n                    handleSearch={handleSearch}\r\n                />\r\n            </div>\r\n           <div\r\n                onClick={handleClick}\r\n                className={!darkMode\r\n                    ? 'controlMode dark'\r\n                    : 'controlMode light'}\r\n            >\r\n                {!darkMode ?\r\n                    <img src=\"https://img.icons8.com/ios/50/000000/light-on--v1.png\"/> :\r\n                    <img src=\"https://img.icons8.com/ios/50/000000/light-off.png\"/>\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport '../css/Characters.css';\r\n\r\n\r\nexport default function Characters({\r\n        claseNameCharacter,\r\n        favorites,\r\n        loading,\r\n        filteredCharacters,\r\n        addFavorite,\r\n        imgStatus,\r\n        imgGender,\r\n        toggleClass,\r\n        loadingStatus\r\n    }) {\r\n\r\n    return (\r\n        (loading) ?\r\n            <div>\r\n                <p>LOADING... {loadingStatus}%</p>\r\n            </div>\r\n        :\r\n            <div>\r\n                <div className=\"favoritesBox\">\r\n                    {/* {(favorites.favorites.length !== 0) && <h3>Favorites: </h3>} */}\r\n                    {favorites.favorites.map(favorite => (\r\n                        <a href={\"#card\"+favorite.id} className=\"favCharacter\" key={favorite.id}>\r\n                            <img alt={favorite.name} src={favorite.image} />\r\n                        </a>\r\n                    ))}\r\n                    {/* {(favorites.favorites.length > 4) &&\r\n                        <a href=\"#\" className=\"favCharacter\" key=\"0\">All Favs</a>\r\n                    } */}\r\n                </div>\r\n\r\n                <div className=\"charactersGeneralBox\">\r\n                    <div id=\"allCardsBox\">\r\n                        {filteredCharacters.map(character => (\r\n                        <div className=\"cardBox\" key={character.id} id={\"card\"+character.id}>\r\n                                <div className=\"card\">\r\n                                    <div className=\"face front\">\r\n                                        <div className=\"contenido\">\r\n                                            <span\r\n                                                readonly=\"readonly\"\r\n                                                className=\"label info\"\r\n                                                title=\"More info\"\r\n                                                onClick={() => toggleClass(character.id, \"flip\")}>\r\n\r\n                                                <i class=\"fas fa-info-circle\"></i>\r\n                                            </span>\r\n\r\n                                            <span\r\n                                                readonly=\"readonly\"\r\n                                                title=\"Add to Favorite\"\r\n                                                className={favorites.favorites.find(item => item.id === character.id)\r\n                                                    ? \"label fav\"\r\n                                                    : \"label fav off\"}\r\n                                                type=\"button\"\r\n                                                onClick={() => addFavorite(character)}>\r\n\r\n                                                <i class=\"far fa-star\"></i>\r\n                                            </span>\r\n                                            <div className=\"imgBox\">\r\n                                                <img alt={character.name} src={character.image} />\r\n                                            </div>\r\n                                            <div className={claseNameCharacter(character.name)}>\r\n                                                <h2>{character.name}</h2>\r\n                                                <h3>{character.species}</h3>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"face back\">\r\n                                        <div className=\"contenido\">\r\n                                            <span className=\"infoButton\" title=\"More info\" onClick={() => toggleClass(character.id, \"flip\")}>\r\n                                                <img alt=\"flip\" src=\"https://img.icons8.com/ios-filled/50/000000/reply-arrow.png\"/>\r\n                                            </span>\r\n                                            <h2>{character.name}</h2>\r\n                                            {(character.type) && <p><strong>* Type:</strong> {character.type}</p>}\r\n                                            {(character.gender) && <p><strong>* Gender:</strong> {character.gender}</p>}\r\n                                            {(character.status) && <p><strong>* Status:</strong> {character.status}</p>}\r\n                                            {(character.origin) && <p><strong>* Origin:</strong> {character.origin.name}</p>}\r\n                                            {(character.location) && <p><strong>* Location:</strong> {character.location.name}</p>}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n        </div>\r\n    )\r\n}\r\n","const favoriteReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'ADD_TO_FAVORITE':\r\n            const isExist = state.favorites.find(item => item.id === action.payload.id)\r\n            if (isExist){\r\n                return {\r\n                    ...state,\r\n                    favorites: state.favorites.filter(item => item !== action.payload)\r\n                }\r\n            }else{\r\n                return {\r\n                    ...state,\r\n                    favorites: [...state.favorites, action.payload]\r\n                }\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default favoriteReducer;","import { useState, useEffect } from \"react\";\r\n\r\nconst useCharacters = url => {\r\n    const [characters, setCharacters] = useState([]);\r\n    const [loading, setLoading] = useState(true)\r\n    const [loadingStatus, setLoadingStatus] = useState(0)\r\n\r\n    const fetchData = (url) => {\r\n        fetch(url)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            setCharacters(characters => [...characters, ...data.results]);\r\n            if(data.info.next){\r\n                setTimeout(fetchData(data.info.next), 0);\r\n\r\n                let nextPage = data.info.next\r\n                nextPage = nextPage.split('=')\r\n                nextPage = nextPage[1]\r\n                nextPage = parseInt(nextPage)\r\n                const allPages = parseInt(data.info.pages)\r\n                const loadValue = Math.round((nextPage/allPages)*100)\r\n                setLoadingStatus(loadValue)\r\n\r\n            }else{\r\n                setLoading(false)\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect( ()=> {\r\n        setTimeout(fetchData(url), 0);\r\n    }, [url])\r\n\r\n    return {\r\n        characters,\r\n        loading,\r\n        loadingStatus,\r\n        fetchData\r\n    };\r\n}\r\n\r\nexport default useCharacters;","import React, {useState, useReducer, useMemo, useRef, useCallback} from 'react';\r\nimport Header from './Header';\r\nimport Characters from './Characters';\r\n\r\nimport favoriteReducer from '../reducers/favoriteReducer';\r\nimport useCharacters from '../hooks/useCharacters';\r\n\r\nconst initialState = {\r\n    favorites: []\r\n}\r\n\r\nconst API = 'https://rickandmortyapi.com/api/character';\r\n\r\nconst Layout = () => {\r\n\r\n    const [favorites, dispatch] = useReducer(favoriteReducer, initialState)\r\n    const [search, setSearch] = useState('')\r\n    const searchInput = useRef(null)\r\n\r\n    const consult = useCharacters(API)\r\n    const characters = consult.characters\r\n    const loading = consult.loading\r\n    const loadingStatus = consult.loadingStatus\r\n\r\n    const claseNameCharacter = (name) => {\r\n        let clas = \"characterName\";\r\n        clas += (name.length > 16) ? \" mini1\" : \"\";\r\n        return clas;\r\n    }\r\n\r\n    const handleSearch = useCallback(() => {\r\n        setSearch(searchInput.current.value);\r\n    }, [])\r\n\r\n    const filteredCharacters = useMemo(()=>\r\n        characters.filter((char)=>{\r\n            return char.name.toLowerCase().includes(search.toLowerCase());\r\n        }),\r\n        [characters, search]\r\n    )\r\n\r\n    const addFavorite = favorite => {\r\n        document.querySelector(`#card${favorite.id} .fav`).classList.toggle(\"off\");\r\n        dispatch({type: 'ADD_TO_FAVORITE', payload: favorite})\r\n    }\r\n\r\n    const imgStatus = (status) => {\r\n        switch(status){\r\n            case 'Dead':\r\n                return <img alt=\"Dead\" title=\"Dead\" src=\"https://img.icons8.com/material-rounded/50/000000/skull.png\"/>;\r\n            case 'Alive':\r\n                return <img alt=\"Alive\" title=\"Alive\" src=\"https://img.icons8.com/ios-filled/48/000000/heart-with-pulse--v1.png\"/>;\r\n            case 'unknown':\r\n                return <img alt=\"unknown\" title=\"unknown\" src=\"https://img.icons8.com/material/50/000000/help--v2.png\"/>\r\n            default:\r\n                return '';\r\n        }\r\n    }\r\n\r\n    const imgGender = (gender) => {\r\n        switch(gender){\r\n            case 'Female':\r\n                return <img alt=\"Female\" title=\"Female\" src=\"https://img.icons8.com/material-outlined/50/000000/female.png\"/>\r\n            case 'Male':\r\n                return <img alt=\"Male\" title=\"Male\" src=\"https://img.icons8.com/ios-filled/50/000000/male.png\"/>\r\n            case 'Genderless':\r\n                return <img alt=\"Genderless\" title=\"Genderless\" src=\"https://img.icons8.com/ios-filled/50/000000/agender-symbol.png\"/>\r\n            case 'unknown':\r\n                return <img alt=\"unknown\" title=\"unknown\" src=\"https://img.icons8.com/material/50/000000/help--v2.png\"/>\r\n            default:\r\n                return '';\r\n        }\r\n    }\r\n\r\n    const toggleClass = (id, cls) => {\r\n        document.querySelector(`#card${id}`).classList.toggle(cls);\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <Header\r\n                search={search}\r\n                searchInput={searchInput}\r\n                handleSearch={handleSearch}\r\n            />\r\n            <Characters\r\n                claseNameCharacter={claseNameCharacter}\r\n                favorites={favorites}\r\n                loading={loading}\r\n                filteredCharacters={filteredCharacters}\r\n                addFavorite={addFavorite}\r\n                imgStatus={imgStatus}\r\n                imgGender={imgGender}\r\n                toggleClass={toggleClass}\r\n                loadingStatus={loadingStatus}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Layout\r\n","import './css/App.css';\nimport Layout from './components/Layout';\n\nfunction App() {\n  return (\n      <div className=\"App\">\n        <Layout />\n      </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}